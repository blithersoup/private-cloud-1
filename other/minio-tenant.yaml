apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  # Name of the Argo CD Application resource
  name: minio-tenant-longhorn
  # Namespace where this Application resource lives (usually 'argocd')
  namespace: argocd
  # Optional: Finalizer
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # Reference to the Argo CD Project
  project: default

  # Source of the deployment manifests (Tenant Helm chart)
  source:
    # URL of the Helm repository (same as operator)
    repoURL: https://operator.min.io/
    # Name of the Helm chart for the tenant
    chart: tenant
    # Use the SAME version as the Operator chart for compatibility
    targetRevision: 5.0.15 # Example version, match operator version

    // IMPORTANT: Helm values overrides to configure the tenant //
    helm:
      values: |
        # Name of the MinIO Tenant Custom Resource that will be created
        tenant:
          name: minio-1 # Choose a name for your MinIO instance
          # Namespace where the Tenant CR and MinIO statefulset/pods will be created
          # MUST match spec.destination.namespace below
          namespace: minio-tenant
          # Configuration for the MinIO server pools
          pools:
            # Define one pool of servers (you can have multiple)
            - servers: 4 # Number of MinIO server pods in this pool (e.g., 4 for erasure coding)
              # Number of Persistent Volumes per server pod
              volumesPerServer: 1
              # Size of EACH Persistent Volume Claim (e.g., 10Gi)
              size: 10Gi
              # // --- THIS IS THE KEY PART FOR LONGHORN --- //
              # Specify the Longhorn StorageClass name.
              # Ensure this StorageClass exists in your cluster!
              storageClassName: longhorn
              # Optional: You can add node selectors, tolerations, affinity for pods in this pool
              # nodeSelector:
              #   disktype: ssd
              # tolerations: []
              # affinity: {}

          # Mount path inside the MinIO pods
          mountPath: /export

          # Subpath within the volume (optional, often not needed with dedicated PVs)
          # subPath: ""

          # Configure user credentials - a Secret will be created
          credsSecret:
            name: minio-tenant-creds # Name of the secret holding access/secret keys

          # Expose MinIO service (LoadBalancer, NodePort, ClusterIP)
          serviceMetadata:
            # Example: Expose via LoadBalancer if your cloud provider supports it
            # type: LoadBalancer
            # Or use NodePort
            # type: NodePort
            # nodePort: 30090 # Specify port if using NodePort
            # Default is ClusterIP
             type: ClusterIP

          # You can request initial buckets and users here if needed
          # buckets:
          #  - name: my-first-bucket
          # users:
          #  - accessKey: myuser
          #    secretKey: mypassword # Avoid storing plaintext secrets here in GitOps, use external secrets management

        # --- Other Tenant Chart Options ---
        # Console configuration (if deploying MinIO Console via this chart - often separate)
        # console:
        #   enabled: true
        #   image: ...

        # Prometheus metrics scraping configuration
        # metrics:
        #   enabled: true
        #   port: 9000 # MinIO metrics port

  # Destination cluster and namespace for the MinIO Tenant resources
  destination:
    # Target cluster URL
    server: https://kubernetes.default.svc
    # Kubernetes namespace WHERE THE MINIO TENANT WILL BE INSTALLED
    # Separate from the operator namespace
    namespace: minio-tenant

  # Sync policy for Argo CD
  syncPolicy:
    # Enable automated synchronization
    automated:
      prune: true
      selfHeal: true
    # Additional sync options
    syncOptions:
      # Automatically create the destination namespace if it doesn't exist
      - CreateNamespace=true
      # Important: Respect ignore difference configurations if you define any
      # - RespectIgnoreDifferences=true